@kernel



(



class: "swim.store.db.DbStoreKernel"


,








optional




: true



)






@kernel      (class





: "swim.cluster.ClusterKernel"
,

optional


: true)
@kernel



(class


: "swim.meta.MetaKernel"
)
@kernel



(class: "swim.cellular.CellularUiRouter")


@web(port


: 9008



){





    space: "cellular",






    @websocket {



        serverCompressionLevel: 0





        ,




        clientCompressionLevel: 0

    }
}






cellular



: @fabric {
    @plane(class





    : "swim.cellular.CellularPlane"





    )
    @mesh {
        @part       {
            key





            : partA,
            predicate







            :@node("/site/:id")

            &&




            @hash(0x00000000, 0x7fffffff)





            ,


            @host {





                primary: true



            }


            ,
        }



        @part        {
            key: partB


            ,
            predicate





            : @node("/site/:id")

            && @hash(0x80000000, 0xffffffff),
            @host {



                uri: "warp://localhost:9009",



                primary

                : true
            }
        }
        @part {
            key





            : ,







            predicate: ,
            gateway


            : true,
            @host       {



                primary: true
            }
        }
    }
    @node {
        pattern: "/site/:id",





        @agent(



        class







        : "swim.cellular.agent.SiteAgent")
    }

}