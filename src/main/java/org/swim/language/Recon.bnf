{
  parserClass="org.swim.language.parser.ReconParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Recon"
  psiImplClassSuffix="Impl"
  psiPackage="org.swim.language.psi"
  psiImplPackage="org.swim.language.psi.impl"

  elementTypeHolderClass="org.swim.language.psi.ReconTypes"
  elementTypeClass="org.swim.language.psi.ReconElementType"
  tokenTypeClass="org.swim.language.psi.ReconTokenType"
}

reconFile ::= (slots | attribute | record | blockItem | literal | operation | COMMENT | whiteSpace)*

blockItem ::= OPEN_BRACK? SP* (literal SP* (attribute SP* CLOSE_BRACK? operation? whiteSpace* blockItem?)?
            | ((attribute SP* CLOSE_BRACK? operation?) SP*)+ ((primitive !COL)
            | whiteSpace* !(OPEN_CRL_BRACK | ATTR | literal) complexAttrHeader
            | (blockItem !COL) | record)?)
            | COMMENT

complexAttrHeader ::= blockItem CLOSE_BRACK?

operation ::= whiteSpace* OPERATOR whiteSpace*

primitive ::= DATA | IDENT | STRING | NUM | BOOL | HEX

literal ::= record | primitive

attribute ::= ATTR SP* (whiteSpace* OPEN_BRACK (attribute | attr_block)? CLOSE_BRACK)? attribute?

attr_block ::= whiteSpace* attr_slots whiteSpace*

attr_slots ::= (empty_slot SP* (NL | SEP) whiteSpace* attr_slots?) | (slot SP* (((whiteSpace* SEP) | NL) whiteSpace* attr_slots?)?)

slots ::= (empty_slot SP* (NL | SEP) whiteSpace* slots?) | (slot SP* (((whiteSpace* SEP) | NL) whiteSpace* slots?)?)

slot ::= (blockItem | attribute) (whiteSpace* COL whiteSpace* (blockItem | attribute))?

empty_slot ::= blockItem whiteSpace* COL

block ::= whiteSpace* slots whiteSpace*

record ::= SP* OPEN_CRL_BRACK block? whiteSpace* CLOSE_CRL_BRACK

whiteSpace ::= NL | SP